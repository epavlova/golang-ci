version: 2.1

orbs:
  orb-tools: circleci/orb-tools@9.0.1
  golang-ci: epavlova/golang-ci@<<pipeline.parameters.dev-orb-version>>

deploy_tags_and_branches: &deploy_tags_and_branches
  tags:
    only: /^(major|minor|patch)-release-v\d+\.\d+\.\d+$/

deploy_only_tags: &deploy_only_tags
  branches:
    ignore: /.*/
  tags:
    only: /^(major|minor|patch)-release-v\d+\.\d+\.\d+$/

parameters:
  dev-orb-version:
    default: dev:alpha
    type: string
  run-integration-tests:
    default: false
    type: boolean

workflows:
  lint_publish-dev_prod-release:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint:
          filters: *deploy_tags_and_branches

      - orb-tools/pack:
          requires:
            - orb-tools/lint
          filters: *deploy_tags_and_branches

      - orb-tools/publish-dev:
          orb-name: epavlova/golang-ci
          context: publish-orbs
          requires:
            - orb-tools/pack
          filters: *deploy_tags_and_branches

      - orb-tools/trigger-integration-tests-workflow:
          context: publish-orbs
          requires:
            - orb-tools/publish-dev
          filters: *deploy_tags_and_branches

      # This step is executed only on tag release. Please note that currently CircleCI is not able to execute
      # the integration-tests workflow on tag release. So dev-promote-prod-from-git-tag job is not in the same
      # workflow as the integration tests.
      - orb-tools/dev-promote-prod-from-git-tag:
          orb-name: epavlova/golang-ci
          context: publish-orbs
          add-pr-comment: false
          perform-branch-check: false
          requires:
            - orb-tools/publish-dev
          filters: *deploy_only_tags

  # The integration tests should be run in a separate workflow triggered by the one above so that they use
  # the latest dev:alpha version of the orb that was released by the publish-dev job above.
  integration-tests:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - golang-ci/build-and-test:
          name: default-integration-tests
          filters: *deploy_tags_and_branches

      - golang-ci/docker-build:
          name: docker-job-integration-tests
          filters: *deploy_tags_and_branches
